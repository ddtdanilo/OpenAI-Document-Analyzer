name: PR Coverage Comment

on:
  pull_request:
    branches: [ main ]

jobs:
  coverage:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Run tests with coverage
      run: |
        pytest tests/ --cov=scripts/ --cov-report=json --cov-report=term-missing > coverage-output.txt
    
    - name: Extract coverage percentage
      id: coverage
      run: |
        COVERAGE=$(python -c "import json; print(json.load(open('coverage.json'))['totals']['percent_covered'])")
        echo "percentage=$COVERAGE" >> $GITHUB_OUTPUT
        echo "Coverage: $COVERAGE%"
    
    - name: Comment PR
      uses: actions/github-script@v6
      with:
        script: |
          const coverage = ${{ steps.coverage.outputs.percentage }};
          const coverageFormatted = Math.round(coverage * 100) / 100;
          
          let emoji = 'üî¥';
          let status = 'needs improvement';
          if (coverage >= 80) {
            emoji = 'üü¢';
            status = 'excellent';
          } else if (coverage >= 60) {
            emoji = 'üü°';
            status = 'good';
          }
          
          const comment = `## ${emoji} Test Coverage Report
          
          **Coverage: ${coverageFormatted}%** (${status})
          
          | Metric | Value |
          |--------|-------|
          | Coverage | ${coverageFormatted}% |
          | Status | ${status} |
          
          ${coverage >= 80 ? '‚úÖ Great job! Coverage is excellent.' : coverage >= 60 ? '‚ö†Ô∏è  Coverage is decent but could be improved.' : '‚ùå Coverage is below recommended threshold (60%).'}
          `;
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          }); 
